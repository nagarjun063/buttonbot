define(['dart_sdk', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/rendering/custom_paint.dart'], (function load__packages__bubble__bubble_dart(dart_sdk, packages__flutter__src__material__colors$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__rendering__custom_paint$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  var bubble = Object.create(dart.library);
  var $floorToDouble = dartx.floorToDouble;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    BubbleNipL: () => (T.BubbleNipL = dart.constFn(dart.legacy(bubble.BubbleNip)))(),
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: bubble.BubbleNip.prototype,
        [_name$]: "BubbleNip.no",
        index: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: bubble.BubbleNip.prototype,
        [_name$]: "BubbleNip.leftTop",
        index: 1
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: bubble.BubbleNip.prototype,
        [_name$]: "BubbleNip.leftCenter",
        index: 2
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: bubble.BubbleNip.prototype,
        [_name$]: "BubbleNip.leftBottom",
        index: 3
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: bubble.BubbleNip.prototype,
        [_name$]: "BubbleNip.rightTop",
        index: 4
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: bubble.BubbleNip.prototype,
        [_name$]: "BubbleNip.rightCenter",
        index: 5
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: bubble.BubbleNip.prototype,
        [_name$]: "BubbleNip.rightBottom",
        index: 6
      });
    },
    get C7() {
      return C[7] = dart.constList([C[0] || CT.C0, C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6], T.BubbleNipL());
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 6,
        [Radius_x]: 6
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 13,
        [_Location_line]: 103,
        [_Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 104,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.constList([C[11] || CT.C11, C[12] || CT.C12], T._LocationL());
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[10] || CT.C10,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 102,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/bubble-1.2.1/lib/bubble.dart"
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "painter",
        [_Location_column]: 11,
        [_Location_line]: 93,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 102,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.constList([C[15] || CT.C15, C[16] || CT.C16], T._LocationL());
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[14] || CT.C14,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 92,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/bubble-1.2.1/lib/bubble.dart"
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 89,
        [_Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 90,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 9,
        [_Location_line]: 91,
        [_Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 92,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.constList([C[19] || CT.C19, C[20] || CT.C20, C[21] || CT.C21, C[22] || CT.C22], T._LocationL());
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[18] || CT.C18,
        [_Location_name]: null,
        [_Location_column]: 41,
        [_Location_line]: 88,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/bubble-1.2.1/lib/bubble.dart"
      });
    }
  }, false);
  var C = Array(23).fill(void 0);
  var I = [
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/bubble-1.2.1/lib/bubble.dart",
    "package:bubble/bubble.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/bubble-1.2.1/lib/bubble_clipper.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/bubble-1.2.1/lib/bubble_painter.dart"
  ];
  var _name$ = dart.privateName(bubble, "_name");
  bubble.BubbleNip = class BubbleNip extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (bubble.BubbleNip.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[0], 13, 6, "index");
    if (_name == null) dart.nullFailed(I[0], 13, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = bubble.BubbleNip.prototype;
  dart.addTypeTests(bubble.BubbleNip);
  dart.addTypeCaches(bubble.BubbleNip);
  dart.setLibraryUri(bubble.BubbleNip, I[1]);
  dart.setFieldSignature(bubble.BubbleNip, () => ({
    __proto__: dart.getFields(bubble.BubbleNip.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(bubble.BubbleNip, ['toString']);
  bubble.BubbleNip.no = C[0] || CT.C0;
  bubble.BubbleNip.leftTop = C[1] || CT.C1;
  bubble.BubbleNip.leftCenter = C[2] || CT.C2;
  bubble.BubbleNip.leftBottom = C[3] || CT.C3;
  bubble.BubbleNip.rightTop = C[4] || CT.C4;
  bubble.BubbleNip.rightCenter = C[5] || CT.C5;
  bubble.BubbleNip.rightBottom = C[6] || CT.C6;
  bubble.BubbleNip.values = C[7] || CT.C7;
  var child$ = dart.privateName(bubble, "Bubble.child");
  var color$ = dart.privateName(bubble, "Bubble.color");
  var borderColor$ = dart.privateName(bubble, "Bubble.borderColor");
  var borderWidth$ = dart.privateName(bubble, "Bubble.borderWidth");
  var borderUp$ = dart.privateName(bubble, "Bubble.borderUp");
  var elevation$ = dart.privateName(bubble, "Bubble.elevation");
  var shadowColor$ = dart.privateName(bubble, "Bubble.shadowColor");
  var margin$ = dart.privateName(bubble, "Bubble.margin");
  var alignment$ = dart.privateName(bubble, "Bubble.alignment");
  var bubbleClipper = dart.privateName(bubble, "Bubble.bubbleClipper");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  bubble.Bubble = class Bubble extends framework.StatelessWidget {
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get borderColor() {
      return this[borderColor$];
    }
    set borderColor(value) {
      super.borderColor = value;
    }
    get borderWidth() {
      return this[borderWidth$];
    }
    set borderWidth(value) {
      super.borderWidth = value;
    }
    get borderUp() {
      return this[borderUp$];
    }
    set borderUp(value) {
      super.borderUp = value;
    }
    get elevation() {
      return this[elevation$];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shadowColor() {
      return this[shadowColor$];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get margin() {
      return this[margin$];
    }
    set margin(value) {
      super.margin = value;
    }
    get alignment() {
      return this[alignment$];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get bubbleClipper() {
      return this[bubbleClipper];
    }
    set bubbleClipper(value) {
      super.bubbleClipper = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 88, 29, "context");
      return new container.Container.new({key: this.key, alignment: this.alignment, margin: this.margin, child: new basic.CustomPaint.new({painter: new bubble.BubblePainter.new({clipper: this.bubbleClipper, color: this.color, borderColor: this.borderColor, borderWidth: this.borderWidth, borderUp: this.borderUp, elevation: this.elevation, shadowColor: this.shadowColor}), child: new container.Container.new({padding: this.bubbleClipper.edgeInsets, child: this.child, $creationLocationd_0dea112b090073317d4: C[9] || CT.C9}), $creationLocationd_0dea112b090073317d4: C[13] || CT.C13}), $creationLocationd_0dea112b090073317d4: C[17] || CT.C17});
    }
  };
  (bubble.Bubble.new = function(opts) {
    let t1, t0, t0$, t1$, t0$0, t0$1, t1$0, t0$2, t0$3, t1$1, t0$4, t0$5, t1$2, t0$6, t0$7, t1$3, t0$8, t0$9, t0$10, t2, t1$4, t0$11, t0$12, t0$13, t2$, t1$5, t0$14, t0$15, t0$16, t2$0, t1$6, t0$17, t0$18, t0$19, t2$1, t1$7, t0$20, t0$21, t1$8, t0$22, t1$9, t0$23, t0$24, t1$10, t0$25, t0$26, t1$11, t0$27, t0$28, t1$12, t0$29, t0$30, t1$13, t0$31, t0$32, t1$14, t0$33, t0$34, t1$15, t0$35, t0$36, t1$16, t0$37, t0$38, t0$39, t2$2, t1$17, t0$40, t0$41, t0$42, t2$3, t1$18, t0$43, t0$44, t0$45, t2$4, t1$19, t0$46, t0$47, t0$48, t2$5, t1$20, t0$49, t0$50;
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let showNip = opts && 'showNip' in opts ? opts.showNip : null;
    let nip = opts && 'nip' in opts ? opts.nip : null;
    let nipWidth = opts && 'nipWidth' in opts ? opts.nipWidth : null;
    let nipHeight = opts && 'nipHeight' in opts ? opts.nipHeight : null;
    let nipOffset = opts && 'nipOffset' in opts ? opts.nipOffset : null;
    let nipRadius = opts && 'nipRadius' in opts ? opts.nipRadius : null;
    let stick = opts && 'stick' in opts ? opts.stick : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
    let borderUp = opts && 'borderUp' in opts ? opts.borderUp : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$] = child;
    this[color$] = (t0$ = (t0 = color, t0 == null ? (t1 = style, t1 == null ? null : t1.color) : t0), t0$ == null ? colors.Colors.white : t0$);
    this[borderColor$] = (t0$1 = (t0$0 = borderColor, t0$0 == null ? (t1$ = style, t1$ == null ? null : t1$.borderColor) : t0$0), t0$1 == null ? colors.Colors.transparent : t0$1);
    this[borderWidth$] = (t0$3 = (t0$2 = borderWidth, t0$2 == null ? (t1$0 = style, t1$0 == null ? null : t1$0.borderWidth) : t0$2), t0$3 == null ? 1.0 : t0$3);
    this[borderUp$] = (t0$5 = (t0$4 = borderUp, t0$4 == null ? (t1$1 = style, t1$1 == null ? null : t1$1.borderUp) : t0$4), t0$5 == null ? true : t0$5);
    this[elevation$] = (t0$7 = (t0$6 = elevation, t0$6 == null ? (t1$2 = style, t1$2 == null ? null : t1$2.elevation) : t0$6), t0$7 == null ? 1.0 : t0$7);
    this[shadowColor$] = (t0$9 = (t0$8 = shadowColor, t0$8 == null ? (t1$3 = style, t1$3 == null ? null : t1$3.shadowColor) : t0$8), t0$9 == null ? colors.Colors.black : t0$9);
    this[margin$] = new edge_insets.EdgeInsets.only({left: (t0$12 = (t0$11 = (t0$10 = margin, t0$10 == null ? null : t0$10.left), t0$11 == null ? (t1$4 = style, t1$4 == null ? null : (t2 = t1$4.margin, t2 == null ? null : t2.left)) : t0$11), t0$12 == null ? 0.0 : t0$12), top: (t0$15 = (t0$14 = (t0$13 = margin, t0$13 == null ? null : t0$13.top), t0$14 == null ? (t1$5 = style, t1$5 == null ? null : (t2$ = t1$5.margin, t2$ == null ? null : t2$.top)) : t0$14), t0$15 == null ? 0.0 : t0$15), right: (t0$18 = (t0$17 = (t0$16 = margin, t0$16 == null ? null : t0$16.right), t0$17 == null ? (t1$6 = style, t1$6 == null ? null : (t2$0 = t1$6.margin, t2$0 == null ? null : t2$0.right)) : t0$17), t0$18 == null ? 0.0 : t0$18), bottom: (t0$21 = (t0$20 = (t0$19 = margin, t0$19 == null ? null : t0$19.bottom), t0$20 == null ? (t1$7 = style, t1$7 == null ? null : (t2$1 = t1$7.margin, t2$1 == null ? null : t2$1.bottom)) : t0$20), t0$21 == null ? 0.0 : t0$21)});
    this[alignment$] = (t0$22 = alignment, t0$22 == null ? (t1$8 = style, t1$8 == null ? null : t1$8.alignment) : t0$22);
    this[bubbleClipper] = new bubble.BubbleClipper.new({radius: (t0$24 = (t0$23 = radius, t0$23 == null ? (t1$9 = style, t1$9 == null ? null : t1$9.radius) : t0$23), t0$24 == null ? C[8] || CT.C8 : t0$24), showNip: (t0$26 = (t0$25 = showNip, t0$25 == null ? (t1$10 = style, t1$10 == null ? null : t1$10.showNip) : t0$25), t0$26 == null ? true : t0$26), nip: (t0$28 = (t0$27 = nip, t0$27 == null ? (t1$11 = style, t1$11 == null ? null : t1$11.nip) : t0$27), t0$28 == null ? bubble.BubbleNip.no : t0$28), nipWidth: (t0$30 = (t0$29 = nipWidth, t0$29 == null ? (t1$12 = style, t1$12 == null ? null : t1$12.nipWidth) : t0$29), t0$30 == null ? 8.0 : t0$30), nipHeight: (t0$32 = (t0$31 = nipHeight, t0$31 == null ? (t1$13 = style, t1$13 == null ? null : t1$13.nipHeight) : t0$31), t0$32 == null ? 10.0 : t0$32), nipOffset: (t0$34 = (t0$33 = nipOffset, t0$33 == null ? (t1$14 = style, t1$14 == null ? null : t1$14.nipOffset) : t0$33), t0$34 == null ? 0.0 : t0$34), nipRadius: (t0$36 = (t0$35 = nipRadius, t0$35 == null ? (t1$15 = style, t1$15 == null ? null : t1$15.nipRadius) : t0$35), t0$36 == null ? 1.0 : t0$36), stick: (t0$38 = (t0$37 = stick, t0$37 == null ? (t1$16 = style, t1$16 == null ? null : t1$16.stick) : t0$37), t0$38 == null ? false : t0$38), padding: new edge_insets.EdgeInsets.only({left: (t0$41 = (t0$40 = (t0$39 = padding, t0$39 == null ? null : t0$39.left), t0$40 == null ? (t1$17 = style, t1$17 == null ? null : (t2$2 = t1$17.padding, t2$2 == null ? null : t2$2.left)) : t0$40), t0$41 == null ? 8.0 : t0$41), top: (t0$44 = (t0$43 = (t0$42 = padding, t0$42 == null ? null : t0$42.top), t0$43 == null ? (t1$18 = style, t1$18 == null ? null : (t2$3 = t1$18.padding, t2$3 == null ? null : t2$3.top)) : t0$43), t0$44 == null ? 6.0 : t0$44), right: (t0$47 = (t0$46 = (t0$45 = padding, t0$45 == null ? null : t0$45.right), t0$46 == null ? (t1$19 = style, t1$19 == null ? null : (t2$4 = t1$19.padding, t2$4 == null ? null : t2$4.right)) : t0$46), t0$47 == null ? 8.0 : t0$47), bottom: (t0$50 = (t0$49 = (t0$48 = padding, t0$48 == null ? null : t0$48.bottom), t0$49 == null ? (t1$20 = style, t1$20 == null ? null : (t2$5 = t1$20.padding, t2$5 == null ? null : t2$5.bottom)) : t0$49), t0$50 == null ? 6.0 : t0$50)})});
    bubble.Bubble.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bubble.Bubble.prototype;
  dart.addTypeTests(bubble.Bubble);
  dart.addTypeCaches(bubble.Bubble);
  dart.setMethodSignature(bubble.Bubble, () => ({
    __proto__: dart.getMethods(bubble.Bubble.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bubble.Bubble, I[1]);
  dart.setFieldSignature(bubble.Bubble, () => ({
    __proto__: dart.getFields(bubble.Bubble.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    color: dart.finalFieldType(ui.Color),
    borderColor: dart.finalFieldType(ui.Color),
    borderWidth: dart.finalFieldType(core.double),
    borderUp: dart.finalFieldType(core.bool),
    elevation: dart.finalFieldType(core.double),
    shadowColor: dart.finalFieldType(ui.Color),
    margin: dart.finalFieldType(edge_insets.EdgeInsets),
    alignment: dart.finalFieldType(dart.nullable(alignment.AlignmentGeometry)),
    bubbleClipper: dart.finalFieldType(bubble.BubbleClipper)
  }));
  var radius$ = dart.privateName(bubble, "BubbleClipper.radius");
  var showNip$ = dart.privateName(bubble, "BubbleClipper.showNip");
  var nip$ = dart.privateName(bubble, "BubbleClipper.nip");
  var nipHeight$ = dart.privateName(bubble, "BubbleClipper.nipHeight");
  var nipWidth$ = dart.privateName(bubble, "BubbleClipper.nipWidth");
  var nipOffset$ = dart.privateName(bubble, "BubbleClipper.nipOffset");
  var nipRadius$ = dart.privateName(bubble, "BubbleClipper.nipRadius");
  var stick$ = dart.privateName(bubble, "BubbleClipper.stick");
  var padding$ = dart.privateName(bubble, "BubbleClipper.padding");
  var _startOffset = dart.privateName(bubble, "_startOffset");
  var _endOffset = dart.privateName(bubble, "_endOffset");
  var _nipCX = dart.privateName(bubble, "_nipCX");
  var _nipCY = dart.privateName(bubble, "_nipCY");
  var _nipPX = dart.privateName(bubble, "_nipPX");
  var _nipPY = dart.privateName(bubble, "_nipPY");
  bubble.BubbleClipper = class BubbleClipper extends proxy_box.CustomClipper$(ui.Path) {
    get radius() {
      return this[radius$];
    }
    set radius(value) {
      super.radius = value;
    }
    get showNip() {
      return this[showNip$];
    }
    set showNip(value) {
      super.showNip = value;
    }
    get nip() {
      return this[nip$];
    }
    set nip(value) {
      super.nip = value;
    }
    get nipHeight() {
      return this[nipHeight$];
    }
    set nipHeight(value) {
      super.nipHeight = value;
    }
    get nipWidth() {
      return this[nipWidth$];
    }
    set nipWidth(value) {
      super.nipWidth = value;
    }
    get nipOffset() {
      return this[nipOffset$];
    }
    set nipOffset(value) {
      super.nipOffset = value;
    }
    get nipRadius() {
      return this[nipRadius$];
    }
    set nipRadius(value) {
      super.nipRadius = value;
    }
    get stick() {
      return this[stick$];
    }
    set stick(value) {
      super.stick = value;
    }
    get padding() {
      return this[padding$];
    }
    set padding(value) {
      super.padding = value;
    }
    get edgeInsets() {
      switch (this.nip) {
        case C[1] || CT.C1:
        case C[3] || CT.C3:
        case C[2] || CT.C2:
        {
          return new edge_insets.EdgeInsets.only({left: dart.notNull(this[_startOffset]) + dart.notNull(this.padding.left), top: this.padding.top, right: dart.notNull(this[_endOffset]) + dart.notNull(this.padding.right), bottom: this.padding.bottom});
        }
        case C[4] || CT.C4:
        case C[6] || CT.C6:
        case C[5] || CT.C5:
        {
          return new edge_insets.EdgeInsets.only({left: dart.notNull(this[_endOffset]) + dart.notNull(this.padding.left), top: this.padding.top, right: dart.notNull(this[_startOffset]) + dart.notNull(this.padding.right), bottom: this.padding.bottom});
        }
        default:
        {
          return new edge_insets.EdgeInsets.only({left: dart.notNull(this[_endOffset]) + dart.notNull(this.padding.left), top: this.padding.top, right: dart.notNull(this[_endOffset]) + dart.notNull(this.padding.right), bottom: this.padding.bottom});
        }
      }
    }
    getClip(size) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5, t0$6, t0$7, t0$8, t0$9;
      if (size == null) dart.nullFailed(I[2], 90, 21, "size");
      let radiusX = this.radius.x;
      let radiusY = this.radius.y;
      let maxRadiusX = dart.notNull(size.width) / 2;
      let maxRadiusY = dart.notNull(size.height) / 2;
      if (dart.notNull(radiusX) > maxRadiusX) {
        radiusY = dart.notNull(radiusY) * (maxRadiusX / dart.notNull(radiusX));
        radiusX = maxRadiusX;
      }
      if (dart.notNull(radiusY) > maxRadiusY) {
        radiusX = dart.notNull(radiusX) * (maxRadiusY / dart.notNull(radiusY));
        radiusY = maxRadiusY;
      }
      let path = ui.Path.new();
      switch (this.nip) {
        case C[1] || CT.C1:
        case C[3] || CT.C3:
        case C[2] || CT.C2:
        {
          path.addRRect(new ui.RRect.fromLTRBR(this[_startOffset], 0.0, dart.notNull(size.width) - dart.notNull(this[_endOffset]), size.height, this.radius));
          break;
        }
        case C[4] || CT.C4:
        case C[6] || CT.C6:
        case C[5] || CT.C5:
        {
          path.addRRect(new ui.RRect.fromLTRBR(this[_endOffset], 0.0, dart.notNull(size.width) - dart.notNull(this[_startOffset]), size.height, this.radius));
          break;
        }
        default:
        {
          path.addRRect(new ui.RRect.fromLTRBR(this[_endOffset], 0.0, dart.notNull(size.width) - dart.notNull(this[_endOffset]), size.height, this.radius));
        }
      }
      if (dart.test(this.showNip)) {
        switch (this.nip) {
          case C[1] || CT.C1:
          {
            let path2 = (t0 = ui.Path.new(), (() => {
              t0.moveTo(dart.notNull(this[_startOffset]) + dart.notNull(radiusX), this.nipOffset);
              t0.lineTo(dart.notNull(this[_startOffset]) + dart.notNull(radiusX), dart.notNull(this.nipOffset) + dart.notNull(this.nipHeight));
              t0.lineTo(this[_startOffset], dart.notNull(this.nipOffset) + dart.notNull(this.nipHeight));
              return t0;
            })());
            if (this.nipRadius === 0) {
              path2.lineTo(0.0, this.nipOffset);
            } else {
              t0$ = path2;
              (() => {
                t0$.lineTo(this[_nipPX], dart.notNull(this.nipOffset) + dart.notNull(this[_nipPY]));
                t0$.arcToPoint(new ui.Offset.new(this[_nipCX], this.nipOffset), {radius: new ui.Radius.circular(this.nipRadius)});
                return t0$;
              })();
            }
            path2.close();
            path = ui.Path.combine(ui.PathOperation.union, path, path2);
            break;
          }
          case C[2] || CT.C2:
          {
            let cy = dart.notNull(this.nipOffset) + dart.notNull(size.height) / 2;
            let nipHalf = dart.notNull(this.nipHeight) / 2;
            let path2 = (t0$0 = ui.Path.new(), (() => {
              t0$0.moveTo(this[_startOffset], cy - nipHalf);
              t0$0.lineTo(dart.notNull(this[_startOffset]) + dart.notNull(radiusX), cy - nipHalf);
              t0$0.lineTo(dart.notNull(this[_startOffset]) + dart.notNull(radiusX), cy + nipHalf);
              t0$0.lineTo(this[_startOffset], cy + nipHalf);
              return t0$0;
            })());
            if (this.nipRadius === 0) {
              path2.lineTo(0.0, cy);
            } else {
              t0$1 = path2;
              (() => {
                t0$1.lineTo(this[_nipPX], cy + dart.notNull(this[_nipPY]));
                t0$1.arcToPoint(new ui.Offset.new(this[_nipPX], cy - dart.notNull(this[_nipPY])), {radius: new ui.Radius.circular(this.nipRadius)});
                return t0$1;
              })();
            }
            path2.close();
            path = ui.Path.combine(ui.PathOperation.union, path, path2);
            break;
          }
          case C[3] || CT.C3:
          {
            let path2 = (t0$2 = ui.Path.new(), (() => {
              t0$2.moveTo(dart.notNull(this[_startOffset]) + dart.notNull(radiusX), dart.notNull(size.height) - dart.notNull(this.nipOffset));
              t0$2.lineTo(dart.notNull(this[_startOffset]) + dart.notNull(radiusX), dart.notNull(size.height) - dart.notNull(this.nipOffset) - dart.notNull(this.nipHeight));
              t0$2.lineTo(this[_startOffset], dart.notNull(size.height) - dart.notNull(this.nipOffset) - dart.notNull(this.nipHeight));
              return t0$2;
            })());
            if (this.nipRadius === 0) {
              path2.lineTo(0.0, dart.notNull(size.height) - dart.notNull(this.nipOffset));
            } else {
              t0$3 = path2;
              (() => {
                t0$3.lineTo(this[_nipPX], dart.notNull(size.height) - dart.notNull(this.nipOffset) - dart.notNull(this[_nipPY]));
                t0$3.arcToPoint(new ui.Offset.new(this[_nipCX], dart.notNull(size.height) - dart.notNull(this.nipOffset)), {radius: new ui.Radius.circular(this.nipRadius), clockwise: false});
                return t0$3;
              })();
            }
            path2.close();
            path = ui.Path.combine(ui.PathOperation.union, path, path2);
            break;
          }
          case C[4] || CT.C4:
          {
            let path2 = (t0$4 = ui.Path.new(), (() => {
              t0$4.moveTo(dart.notNull(size.width) - dart.notNull(this[_startOffset]) - dart.notNull(radiusX), this.nipOffset);
              t0$4.lineTo(dart.notNull(size.width) - dart.notNull(this[_startOffset]) - dart.notNull(radiusX), dart.notNull(this.nipOffset) + dart.notNull(this.nipHeight));
              t0$4.lineTo(dart.notNull(size.width) - dart.notNull(this[_startOffset]), dart.notNull(this.nipOffset) + dart.notNull(this.nipHeight));
              return t0$4;
            })());
            if (this.nipRadius === 0) {
              path2.lineTo(size.width, this.nipOffset);
            } else {
              t0$5 = path2;
              (() => {
                t0$5.lineTo(dart.notNull(size.width) - dart.notNull(this[_nipPX]), dart.notNull(this.nipOffset) + dart.notNull(this[_nipPY]));
                t0$5.arcToPoint(new ui.Offset.new(dart.notNull(size.width) - dart.notNull(this[_nipCX]), this.nipOffset), {radius: new ui.Radius.circular(this.nipRadius), clockwise: false});
                return t0$5;
              })();
            }
            path2.close();
            path = ui.Path.combine(ui.PathOperation.union, path, path2);
            break;
          }
          case C[5] || CT.C5:
          {
            let cy = dart.notNull(this.nipOffset) + dart.notNull(size.height) / 2;
            let nipHalf = dart.notNull(this.nipHeight) / 2;
            let path2 = (t0$6 = ui.Path.new(), (() => {
              t0$6.moveTo(dart.notNull(size.width) - dart.notNull(this[_startOffset]), cy - nipHalf);
              t0$6.lineTo(dart.notNull(size.width) - dart.notNull(this[_startOffset]) - dart.notNull(radiusX), cy - nipHalf);
              t0$6.lineTo(dart.notNull(size.width) - dart.notNull(this[_startOffset]) - dart.notNull(radiusX), cy + nipHalf);
              t0$6.lineTo(dart.notNull(size.width) - dart.notNull(this[_startOffset]), cy + nipHalf);
              return t0$6;
            })());
            if (this.nipRadius === 0) {
              path2.lineTo(size.width, cy);
            } else {
              t0$7 = path2;
              (() => {
                t0$7.lineTo(dart.notNull(size.width) - dart.notNull(this[_nipPX]), cy + dart.notNull(this[_nipPY]));
                t0$7.arcToPoint(new ui.Offset.new(dart.notNull(size.width) - dart.notNull(this[_nipPX]), cy - dart.notNull(this[_nipPY])), {radius: new ui.Radius.circular(this.nipRadius), clockwise: false});
                return t0$7;
              })();
            }
            path2.close();
            path = ui.Path.combine(ui.PathOperation.union, path, path2);
            break;
          }
          case C[6] || CT.C6:
          {
            let path2 = (t0$8 = ui.Path.new(), (() => {
              t0$8.moveTo(dart.notNull(size.width) - dart.notNull(this[_startOffset]) - dart.notNull(radiusX), dart.notNull(size.height) - dart.notNull(this.nipOffset));
              t0$8.lineTo(dart.notNull(size.width) - dart.notNull(this[_startOffset]) - dart.notNull(radiusX), dart.notNull(size.height) - dart.notNull(this.nipOffset) - dart.notNull(this.nipHeight));
              t0$8.lineTo(dart.notNull(size.width) - dart.notNull(this[_startOffset]), dart.notNull(size.height) - dart.notNull(this.nipOffset) - dart.notNull(this.nipHeight));
              return t0$8;
            })());
            if (this.nipRadius === 0) {
              path2.lineTo(size.width, dart.notNull(size.height) - dart.notNull(this.nipOffset));
            } else {
              t0$9 = path2;
              (() => {
                t0$9.lineTo(dart.notNull(size.width) - dart.notNull(this[_nipPX]), dart.notNull(size.height) - dart.notNull(this.nipOffset) - dart.notNull(this[_nipPY]));
                t0$9.arcToPoint(new ui.Offset.new(dart.notNull(size.width) - dart.notNull(this[_nipCX]), dart.notNull(size.height) - dart.notNull(this.nipOffset)), {radius: new ui.Radius.circular(this.nipRadius)});
                return t0$9;
              })();
            }
            path2.close();
            path = ui.Path.combine(ui.PathOperation.union, path, path2);
            break;
          }
          default:
        }
      }
      return path;
    }
    shouldReclip(oldClipper) {
      bubble.BubbleClipper.as(oldClipper);
      if (oldClipper == null) dart.nullFailed(I[2], 278, 35, "oldClipper");
      return false;
    }
  };
  (bubble.BubbleClipper.new = function(opts) {
    let radius = opts && 'radius' in opts ? opts.radius : null;
    if (radius == null) dart.nullFailed(I[2], 5, 19, "radius");
    let showNip = opts && 'showNip' in opts ? opts.showNip : null;
    if (showNip == null) dart.nullFailed(I[2], 6, 19, "showNip");
    let nip = opts && 'nip' in opts ? opts.nip : null;
    if (nip == null) dart.nullFailed(I[2], 7, 19, "nip");
    let nipWidth = opts && 'nipWidth' in opts ? opts.nipWidth : null;
    if (nipWidth == null) dart.nullFailed(I[2], 8, 19, "nipWidth");
    let nipHeight = opts && 'nipHeight' in opts ? opts.nipHeight : null;
    if (nipHeight == null) dart.nullFailed(I[2], 9, 19, "nipHeight");
    let nipOffset = opts && 'nipOffset' in opts ? opts.nipOffset : null;
    if (nipOffset == null) dart.nullFailed(I[2], 10, 19, "nipOffset");
    let nipRadius = opts && 'nipRadius' in opts ? opts.nipRadius : null;
    if (nipRadius == null) dart.nullFailed(I[2], 11, 19, "nipRadius");
    let stick = opts && 'stick' in opts ? opts.stick : null;
    if (stick == null) dart.nullFailed(I[2], 12, 19, "stick");
    let padding = opts && 'padding' in opts ? opts.padding : null;
    if (padding == null) dart.nullFailed(I[2], 13, 19, "padding");
    this[_startOffset] = 0.0;
    this[_endOffset] = 0.0;
    this[_nipCX] = 0.0;
    this[_nipCY] = 0.0;
    this[_nipPX] = 0.0;
    this[_nipPY] = 0.0;
    this[radius$] = radius;
    this[showNip$] = showNip;
    this[nip$] = nip;
    this[nipWidth$] = nipWidth;
    this[nipHeight$] = nipHeight;
    this[nipOffset$] = nipOffset;
    this[nipRadius$] = nipRadius;
    this[stick$] = stick;
    this[padding$] = padding;
    if (!(dart.notNull(nipWidth) > 0)) dart.assertFailed(null, I[2], 14, 17, "nipWidth > 0");
    if (!(dart.notNull(nipHeight) > 0)) dart.assertFailed(null, I[2], 15, 16, "nipHeight > 0");
    if (!(dart.notNull(nipRadius) >= 0)) dart.assertFailed(null, I[2], 16, 16, "nipRadius >= 0");
    if (!(dart.notNull(nipRadius) <= dart.notNull(nipWidth) / 2 && dart.notNull(nipRadius) <= dart.notNull(nipHeight) / 2)) dart.assertFailed(null, I[2], 17, 16, "nipRadius <= nipWidth / 2 && nipRadius <= nipHeight / 2");
    bubble.BubbleClipper.__proto__.new.call(this);
    if (this.nip == bubble.BubbleNip.no) return;
    this[_startOffset] = this[_endOffset] = this.nipWidth;
    let isCenter = this.nip == bubble.BubbleNip.leftCenter || this.nip == bubble.BubbleNip.rightCenter;
    let k = isCenter ? dart.notNull(this.nipHeight) / 2 / dart.notNull(this.nipWidth) : dart.notNull(this.nipHeight) / dart.notNull(this.nipWidth);
    let a = math.atan(k);
    this[_nipCX] = isCenter ? math.sqrt(dart.notNull(this.nipRadius) * dart.notNull(this.nipRadius) * (1 + 1 / k / k)) : (dart.notNull(this.nipRadius) + math.sqrt(dart.notNull(this.nipRadius) * dart.notNull(this.nipRadius) * (1 + k * k))) / k;
    let nipStickOffset = (dart.notNull(this[_nipCX]) - dart.notNull(this.nipRadius))[$floorToDouble]();
    this[_nipCX] = dart.notNull(this[_nipCX]) - nipStickOffset;
    this[_nipCY] = isCenter ? 0.0 : this.nipRadius;
    this[_nipPX] = dart.notNull(this[_nipCX]) - dart.notNull(this.nipRadius) * math.sin(a);
    this[_nipPY] = dart.notNull(this[_nipCY]) + dart.notNull(this.nipRadius) * math.cos(a);
    this[_startOffset] = dart.notNull(this[_startOffset]) - nipStickOffset;
    this[_endOffset] = dart.notNull(this[_endOffset]) - nipStickOffset;
    if (dart.test(this.stick)) this[_endOffset] = 0.0;
  }).prototype = bubble.BubbleClipper.prototype;
  dart.addTypeTests(bubble.BubbleClipper);
  dart.addTypeCaches(bubble.BubbleClipper);
  dart.setMethodSignature(bubble.BubbleClipper, () => ({
    __proto__: dart.getMethods(bubble.BubbleClipper.__proto__),
    getClip: dart.fnType(ui.Path, [ui.Size]),
    shouldReclip: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(bubble.BubbleClipper, () => ({
    __proto__: dart.getGetters(bubble.BubbleClipper.__proto__),
    edgeInsets: edge_insets.EdgeInsets
  }));
  dart.setLibraryUri(bubble.BubbleClipper, I[1]);
  dart.setFieldSignature(bubble.BubbleClipper, () => ({
    __proto__: dart.getFields(bubble.BubbleClipper.__proto__),
    radius: dart.finalFieldType(ui.Radius),
    showNip: dart.finalFieldType(core.bool),
    nip: dart.finalFieldType(bubble.BubbleNip),
    nipHeight: dart.finalFieldType(core.double),
    nipWidth: dart.finalFieldType(core.double),
    nipOffset: dart.finalFieldType(core.double),
    nipRadius: dart.finalFieldType(core.double),
    stick: dart.finalFieldType(core.bool),
    padding: dart.finalFieldType(edge_insets.EdgeInsets),
    [_startOffset]: dart.fieldType(core.double),
    [_endOffset]: dart.fieldType(core.double),
    [_nipCX]: dart.fieldType(core.double),
    [_nipCY]: dart.fieldType(core.double),
    [_nipPX]: dart.fieldType(core.double),
    [_nipPY]: dart.fieldType(core.double)
  }));
  var left$ = dart.privateName(bubble, "BubbleEdges.left");
  var top$ = dart.privateName(bubble, "BubbleEdges.top");
  var right$ = dart.privateName(bubble, "BubbleEdges.right");
  var bottom$ = dart.privateName(bubble, "BubbleEdges.bottom");
  bubble.BubbleEdges = class BubbleEdges extends core.Object {
    get left() {
      return this[left$];
    }
    set left(value) {
      super.left = value;
    }
    get top() {
      return this[top$];
    }
    set top(value) {
      super.top = value;
    }
    get right() {
      return this[right$];
    }
    set right(value) {
      super.right = value;
    }
    get bottom() {
      return this[bottom$];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get edgeInsets() {
      let t0, t0$, t0$0, t0$1;
      return new edge_insets.EdgeInsets.fromLTRB((t0 = this.left, t0 == null ? 0.0 : t0), (t0$ = this.top, t0$ == null ? 0.0 : t0$), (t0$0 = this.right, t0$0 == null ? 0.0 : t0$0), (t0$1 = this.bottom, t0$1 == null ? 0.0 : t0$1));
    }
    toString() {
      return "BubbleEdges(" + dart.str(this.left) + ", " + dart.str(this.top) + ", " + dart.str(this.right) + ", " + dart.str(this.bottom) + ")";
    }
  };
  (bubble.BubbleEdges.fromLTRB = function(left, top, right, bottom) {
    this[left$] = left;
    this[top$] = top;
    this[right$] = right;
    this[bottom$] = bottom;
    ;
  }).prototype = bubble.BubbleEdges.prototype;
  (bubble.BubbleEdges.all = function(value) {
    this[left$] = value;
    this[top$] = value;
    this[right$] = value;
    this[bottom$] = value;
    ;
  }).prototype = bubble.BubbleEdges.prototype;
  (bubble.BubbleEdges.only = function(opts) {
    let left = opts && 'left' in opts ? opts.left : null;
    let top = opts && 'top' in opts ? opts.top : null;
    let right = opts && 'right' in opts ? opts.right : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    this[left$] = left;
    this[top$] = top;
    this[right$] = right;
    this[bottom$] = bottom;
    ;
  }).prototype = bubble.BubbleEdges.prototype;
  (bubble.BubbleEdges.symmetric = function(opts) {
    let vertical = opts && 'vertical' in opts ? opts.vertical : null;
    let horizontal = opts && 'horizontal' in opts ? opts.horizontal : null;
    this[left$] = horizontal;
    this[top$] = vertical;
    this[right$] = horizontal;
    this[bottom$] = vertical;
    ;
  }).prototype = bubble.BubbleEdges.prototype;
  dart.addTypeTests(bubble.BubbleEdges);
  dart.addTypeCaches(bubble.BubbleEdges);
  dart.setGetterSignature(bubble.BubbleEdges, () => ({
    __proto__: dart.getGetters(bubble.BubbleEdges.__proto__),
    edgeInsets: edge_insets.EdgeInsets
  }));
  dart.setLibraryUri(bubble.BubbleEdges, I[1]);
  dart.setFieldSignature(bubble.BubbleEdges, () => ({
    __proto__: dart.getFields(bubble.BubbleEdges.__proto__),
    left: dart.finalFieldType(dart.nullable(core.double)),
    top: dart.finalFieldType(dart.nullable(core.double)),
    right: dart.finalFieldType(dart.nullable(core.double)),
    bottom: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(bubble.BubbleEdges, ['toString']);
  var clipper$ = dart.privateName(bubble, "BubblePainter.clipper");
  var borderUp$0 = dart.privateName(bubble, "BubblePainter.borderUp");
  var elevation$0 = dart.privateName(bubble, "BubblePainter.elevation");
  var shadowColor$0 = dart.privateName(bubble, "BubblePainter.shadowColor");
  var _fillPaint = dart.privateName(bubble, "_fillPaint");
  var _strokePaint = dart.privateName(bubble, "_strokePaint");
  bubble.BubblePainter = class BubblePainter extends custom_paint.CustomPainter {
    get clipper() {
      return this[clipper$];
    }
    set clipper(value) {
      super.clipper = value;
    }
    get borderUp() {
      return this[borderUp$0];
    }
    set borderUp(value) {
      super.borderUp = value;
    }
    get elevation() {
      return this[elevation$0];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shadowColor() {
      return this[shadowColor$0];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    paint(canvas, size) {
      if (canvas == null) dart.nullFailed(I[3], 34, 21, "canvas");
      if (size == null) dart.nullFailed(I[3], 34, 34, "size");
      let clip = this.clipper.getClip(size);
      if (this.elevation !== 0.0) {
        canvas.drawShadow(clip, this.shadowColor, this.elevation, false);
      }
      if (dart.test(this.borderUp)) canvas.drawPath(clip, this[_fillPaint]);
      if (this[_strokePaint] != null) {
        canvas.drawPath(clip, dart.nullCheck(this[_strokePaint]));
      }
      if (!dart.test(this.borderUp)) canvas.drawPath(clip, this[_fillPaint]);
    }
    shouldRepaint(oldDelegate) {
      bubble.BubblePainter.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[3], 51, 46, "oldDelegate");
      return false;
    }
  };
  (bubble.BubblePainter.new = function(opts) {
    let t0, t0$;
    let clipper = opts && 'clipper' in opts ? opts.clipper : null;
    if (clipper == null) dart.nullFailed(I[3], 6, 19, "clipper");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[3], 7, 20, "color");
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    if (borderColor == null) dart.nullFailed(I[3], 8, 20, "borderColor");
    let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
    if (borderWidth == null) dart.nullFailed(I[3], 9, 21, "borderWidth");
    let borderUp = opts && 'borderUp' in opts ? opts.borderUp : null;
    if (borderUp == null) dart.nullFailed(I[3], 10, 19, "borderUp");
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    if (elevation == null) dart.nullFailed(I[3], 11, 19, "elevation");
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    if (shadowColor == null) dart.nullFailed(I[3], 12, 19, "shadowColor");
    this[clipper$] = clipper;
    this[borderUp$0] = borderUp;
    this[elevation$0] = elevation;
    this[shadowColor$0] = shadowColor;
    this[_fillPaint] = (t0 = ui.Paint.new(), (() => {
      t0.color = color;
      t0.style = ui.PaintingStyle.fill;
      return t0;
    })());
    this[_strokePaint] = borderWidth === 0 || dart.equals(borderColor, colors.Colors.transparent) ? null : (t0$ = ui.Paint.new(), (() => {
      t0$.color = borderColor;
      t0$.strokeWidth = borderWidth;
      t0$.strokeCap = ui.StrokeCap.round;
      t0$.strokeJoin = ui.StrokeJoin.round;
      t0$.style = ui.PaintingStyle.stroke;
      return t0$;
    })());
    bubble.BubblePainter.__proto__.new.call(this);
    ;
  }).prototype = bubble.BubblePainter.prototype;
  dart.addTypeTests(bubble.BubblePainter);
  dart.addTypeCaches(bubble.BubblePainter);
  dart.setMethodSignature(bubble.BubblePainter, () => ({
    __proto__: dart.getMethods(bubble.BubblePainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(bubble.BubblePainter, I[1]);
  dart.setFieldSignature(bubble.BubblePainter, () => ({
    __proto__: dart.getFields(bubble.BubblePainter.__proto__),
    clipper: dart.finalFieldType(proxy_box.CustomClipper$(ui.Path)),
    borderUp: dart.finalFieldType(core.bool),
    elevation: dart.finalFieldType(core.double),
    shadowColor: dart.finalFieldType(ui.Color),
    [_fillPaint]: dart.finalFieldType(ui.Paint),
    [_strokePaint]: dart.finalFieldType(dart.nullable(ui.Paint))
  }));
  var radius$0 = dart.privateName(bubble, "BubbleStyle.radius");
  var showNip$0 = dart.privateName(bubble, "BubbleStyle.showNip");
  var nip$0 = dart.privateName(bubble, "BubbleStyle.nip");
  var nipHeight$0 = dart.privateName(bubble, "BubbleStyle.nipHeight");
  var nipWidth$0 = dart.privateName(bubble, "BubbleStyle.nipWidth");
  var nipOffset$0 = dart.privateName(bubble, "BubbleStyle.nipOffset");
  var nipRadius$0 = dart.privateName(bubble, "BubbleStyle.nipRadius");
  var stick$0 = dart.privateName(bubble, "BubbleStyle.stick");
  var color$0 = dart.privateName(bubble, "BubbleStyle.color");
  var borderColor$0 = dart.privateName(bubble, "BubbleStyle.borderColor");
  var borderWidth$0 = dart.privateName(bubble, "BubbleStyle.borderWidth");
  var borderUp$1 = dart.privateName(bubble, "BubbleStyle.borderUp");
  var elevation$1 = dart.privateName(bubble, "BubbleStyle.elevation");
  var shadowColor$1 = dart.privateName(bubble, "BubbleStyle.shadowColor");
  var padding$0 = dart.privateName(bubble, "BubbleStyle.padding");
  var margin$0 = dart.privateName(bubble, "BubbleStyle.margin");
  var alignment$0 = dart.privateName(bubble, "BubbleStyle.alignment");
  bubble.BubbleStyle = class BubbleStyle extends core.Object {
    get radius() {
      return this[radius$0];
    }
    set radius(value) {
      super.radius = value;
    }
    get showNip() {
      return this[showNip$0];
    }
    set showNip(value) {
      super.showNip = value;
    }
    get nip() {
      return this[nip$0];
    }
    set nip(value) {
      super.nip = value;
    }
    get nipHeight() {
      return this[nipHeight$0];
    }
    set nipHeight(value) {
      super.nipHeight = value;
    }
    get nipWidth() {
      return this[nipWidth$0];
    }
    set nipWidth(value) {
      super.nipWidth = value;
    }
    get nipOffset() {
      return this[nipOffset$0];
    }
    set nipOffset(value) {
      super.nipOffset = value;
    }
    get nipRadius() {
      return this[nipRadius$0];
    }
    set nipRadius(value) {
      super.nipRadius = value;
    }
    get stick() {
      return this[stick$0];
    }
    set stick(value) {
      super.stick = value;
    }
    get color() {
      return this[color$0];
    }
    set color(value) {
      super.color = value;
    }
    get borderColor() {
      return this[borderColor$0];
    }
    set borderColor(value) {
      super.borderColor = value;
    }
    get borderWidth() {
      return this[borderWidth$0];
    }
    set borderWidth(value) {
      super.borderWidth = value;
    }
    get borderUp() {
      return this[borderUp$1];
    }
    set borderUp(value) {
      super.borderUp = value;
    }
    get elevation() {
      return this[elevation$1];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shadowColor() {
      return this[shadowColor$1];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get padding() {
      return this[padding$0];
    }
    set padding(value) {
      super.padding = value;
    }
    get margin() {
      return this[margin$0];
    }
    set margin(value) {
      super.margin = value;
    }
    get alignment() {
      return this[alignment$0];
    }
    set alignment(value) {
      super.alignment = value;
    }
  };
  (bubble.BubbleStyle.new = function(opts) {
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let showNip = opts && 'showNip' in opts ? opts.showNip : null;
    let nip = opts && 'nip' in opts ? opts.nip : null;
    let nipWidth = opts && 'nipWidth' in opts ? opts.nipWidth : null;
    let nipHeight = opts && 'nipHeight' in opts ? opts.nipHeight : null;
    let nipOffset = opts && 'nipOffset' in opts ? opts.nipOffset : null;
    let nipRadius = opts && 'nipRadius' in opts ? opts.nipRadius : null;
    let stick = opts && 'stick' in opts ? opts.stick : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
    let borderUp = opts && 'borderUp' in opts ? opts.borderUp : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    this[radius$0] = radius;
    this[showNip$0] = showNip;
    this[nip$0] = nip;
    this[nipWidth$0] = nipWidth;
    this[nipHeight$0] = nipHeight;
    this[nipOffset$0] = nipOffset;
    this[nipRadius$0] = nipRadius;
    this[stick$0] = stick;
    this[color$0] = color;
    this[borderColor$0] = borderColor;
    this[borderWidth$0] = borderWidth;
    this[borderUp$1] = borderUp;
    this[elevation$1] = elevation;
    this[shadowColor$1] = shadowColor;
    this[padding$0] = padding;
    this[margin$0] = margin;
    this[alignment$0] = alignment;
    ;
  }).prototype = bubble.BubbleStyle.prototype;
  dart.addTypeTests(bubble.BubbleStyle);
  dart.addTypeCaches(bubble.BubbleStyle);
  dart.setLibraryUri(bubble.BubbleStyle, I[1]);
  dart.setFieldSignature(bubble.BubbleStyle, () => ({
    __proto__: dart.getFields(bubble.BubbleStyle.__proto__),
    radius: dart.finalFieldType(dart.nullable(ui.Radius)),
    showNip: dart.finalFieldType(dart.nullable(core.bool)),
    nip: dart.finalFieldType(dart.nullable(bubble.BubbleNip)),
    nipHeight: dart.finalFieldType(dart.nullable(core.double)),
    nipWidth: dart.finalFieldType(dart.nullable(core.double)),
    nipOffset: dart.finalFieldType(dart.nullable(core.double)),
    nipRadius: dart.finalFieldType(dart.nullable(core.double)),
    stick: dart.finalFieldType(dart.nullable(core.bool)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    borderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    borderWidth: dart.finalFieldType(dart.nullable(core.double)),
    borderUp: dart.finalFieldType(dart.nullable(core.bool)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    padding: dart.finalFieldType(dart.nullable(bubble.BubbleEdges)),
    margin: dart.finalFieldType(dart.nullable(bubble.BubbleEdges)),
    alignment: dart.finalFieldType(dart.nullable(alignment.AlignmentGeometry))
  }));
  dart.trackLibraries("packages/bubble/bubble.dart", {
    "package:bubble/bubble.dart": bubble
  }, {
    "package:bubble/bubble.dart": ["bubble_clipper.dart", "bubble_edges.dart", "bubble_painter.dart", "bubble_style.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["bubble.dart","bubble_clipper.dart","bubble_edges.dart","bubble_painter.dart","bubble_style.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/bubble/bubble.dart.lib.js"}');
  // Exports:
  return {
    bubble: bubble
  };
}));

//# sourceMappingURL=bubble.dart.lib.js.map
